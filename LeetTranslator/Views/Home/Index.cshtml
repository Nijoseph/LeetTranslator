@{
    ViewData["Title"] = "Leet Translator";
}

<div class="modal fade" id="addTranslationModal" tabindex="-1" role="dialog" aria-labelledby="addTranslationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addTranslationModalLabel">Add a Translation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addTranslationForm">
                    <div class="form-group">
                        <label for="translationType">Translation Type</label>
                        <select class="dropdown-item" id="translationType"></select>
                    </div>
                    <div class="form-group">
                        <label for="originalText">Original Text</label>
                        <textarea class="form-control" id="originalText" name="originalText" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="TranslatedText">Translated Text</label>
                        <textarea class="form-control" id="TranslatedText" rows="3" readonly></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="translateButton">Translate</button>
                <button type="button" class="btn btn-success" id="saveTranslationButton" disabled>Save</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="translationTypeModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Translation Type</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="translationTypeForm">
                    <div class="form-group">
                        <label for="typeName">Type Name:</label>
                        <input type="text" class="form-control" id="typeName" name="typeName" required>
                    </div>
                    <div class="form-group">
                        <label for="apiKey">API Key:</label>
                        <input type="text" class="form-control" id="apiKey" name="apiKey">
                    </div>
                    <div class="form-group">
                        <label for="apiUrl">API URL:</label>
                        <input type="text" class="form-control" id="apiUrl" name="apiUrl">
                    </div>
                    <div class="form-group form-check">
                        <input type="checkbox" class="form-check-input" id="isDeleted" name="isDeleted">
                        <label class="form-check-label" for="isDeleted">Is Deleted</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveTranslationTypeButton">Save</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="viewDetailsModal" tabindex="-1" role="dialog" aria-labelledby="viewDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-body">
                <div id="detailsContent"></div>
            </div>
        </div>
    </div>
</div>

@if (User.Identity.IsAuthenticated)
{
    <div id="translationDataSection">
        <table id="translationsTable" class="table" style="width:100%">
            <thead>
                <tr>
                    <th>Type</th>
                    <th>Original Text</th>
                    <th>Translated Text</th>
                    <th>Translated Text</th>
                </tr>
            </thead>
        </table>
    </div>
}
else
{
    <div class="alert alert-success">
        <p>Leet Translator project for AFS .NET Developer Test. it hasData table for records with search and filter options as it is required, it Use Ajax and JQuery and stored procedures to select ans save data in the database</p>
        <p>Please <a asp-controller="Home" asp-action="Login">login</a> or <a asp-controller="Home" asp-action="Register">register</a> to access the Leet translator.</p>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        var selectedTranslationType = 1;
        $(document).ready(function () {
            populateTranslationTypes();
            $('#translationsTable').DataTable({
                "ajax": {
                    "url": "@Url.Action("GetAllTranslationsForDataTable", "Home")",
                    "type": "GET",
                    "datatype": "json",
                    "dataSrc": "listOfTranslations"
                },
                "columns": [
                    
                    { "data": "typeName", "name": "TypeName", "title": "Type" },
                    {
                        "data": "originalText",
                        "name": "OriginalText",
                        "title": "Original Text",
                        "render": function (data, type, row, meta) {
                            // Trim the text to a specific length (e.g., 50 characters) and add ellipsis
                            if (data.length > 50) {
                                return data.substr(0, 50) + '...';
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        "data": "translatedText",
                        "name": "TranslatedText",
                        "title": "Translated Text",
                        "render": function (data, type, row, meta) {
                            // Trim the text to a specific length (e.g., 50 characters) and add ellipsis
                            if (data.length > 50) {
                                return data.substr(0, 100) + '...';
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, full, meta) {
                            return `
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-danger btn-sm delete-button" data-id="${data.translationId}"><i class="fa fa-trash"></i></button>
                                <button type="button" class="btn btn-info btn-sm view-button" data-id="${data.translationId}"><i class="fa fa-eye"></i></button>
                            </div>
                        `;
                        },
                        "title": "Actions"
                    }
                ]

            });

            $('#translationsTable').on('click', '.delete-button', function () {
                var data = $('#translationsTable').DataTable().row($(this).parents('tr')).data();
                console.log('Row Data:', data);
                console.log('Delete button clicked for ID:', data.translationId);
            });

            // Handle view button click event
            $('#translationsTable').on('click', '.view-button', function () {
                var data = $('#translationsTable').DataTable().row($(this).parents('tr')).data();

                // Populate modal content with data
                var modalContent = `
            <div class="modal-header">
                <h5 class="modal-title" id="viewDetailsModalLabel">Translation To ${data.typeName}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="background-color: white; padding: 10px;">
                        <h6>Original Text:</h6>
                        <p>${data.originalText}</p>
                    </div>
                    <div class="col-md-12" style="background-color: #f0f0f0; padding: 10px;">
                        <h6>Translated Text:</h6>
                        <p>${data.translatedText}</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <p class="mb-0">Translated by: ${data.firstName} ${data.lastName}</p>
                <p class="mb-0">Date: ${data.date}</p> <!-- Assuming date property exists in your data object -->
            </div>
        `;
                $('#detailsContent').html(modalContent);
                $('#viewDetailsModal').modal('show');




                // Set modal content
                $('#detailsContent').html(modalContent);

                // Show the modal
                $('#viewDetailsModal').modal('show');
            });



            $("#translationsTable_wrapper .dataTables_filter")
                .append('<button type="button" class="btn btn-primary" id="addTranslationButton">Add Translation</button>');

            $("#addTranslationButton").css({
                "margin": "10px",
                "padding": "5px 15px"
            });

            $(document).on('click', '#customButton', function () {
                alert('Button clicked!');
            });

            $('#saveTranslationTypeButton').click(function () {
                var formData = {
                    TypeName: $('#typeName').val(),
                    ApiKey: $('#apiKey').val(),
                    ApiUrl: $('#apiUrl').val()
                };

                $.ajax({
                    url: "/Home/SaveTranslationType",
                    method: "POST",
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            alert('Successfully saved!');
                            populateTranslationTypes();
                            $('#typeName').val('');
                            $('#apiKey').val('');
                            $('#apiUrl').val('');
                            $('#translationTypeModal').modal('hide');
                        } else {
                            alert('Error saving data.');
                        }
                    }
                });
            });

            // Code for addTranslationModal
            $('#addTranslationButton').click(function () {
                $('#addTranslationModal').modal('show');
            });

            $('#viewDetailsModal').click(function () {
                $('#viewDetailsModal').modal('show');
            });

            $("#translationType").on('change', function () {
                selectedTranslationType = $(this).val();
                console.log("Selected Translation Type:", selectedTranslationType);
            });

            $('#translateButton').click(function () {
                handleTranslationRequest();
            });

            $('#TranslatedText').on('input', function () {
                handleTranslatedTextInput();
            });

            $('.close, #closeButton').click(function () {
                handleCloseActions();
            });

            $('#saveTranslationButton').click(function () {
                handleSaveTranslation();
            });
        });

        function handleTranslationRequest() {
            const originalText = $('#originalText').val();

            if (!originalText.trim()) {
                alert('Please enter some text to translate.');
                return;
            }

            $('#translateButton').text('Translating...').prop('disabled', true);
            $('#saveTranslationButton').prop('disabled', true);

            $.ajax({
                url: "@Url.Action("TranslateMethod", "Home")",
                method: "POST",
                data: { textToTranslate: originalText, typeId: selectedTranslationType },
                success: function (response) {
                    $('#translateButton').text('Translate').prop('disabled', false);

                    if (response.success) {
                        $('#TranslatedText').val(response.translatedText);
                        $('#saveTranslationButton').prop('disabled', false);
                    } else {
                        alert(response.message || 'Unexpected response from the server. Translation may have failed.');
                        $('#saveTranslationButton').prop('disabled', true);
                    }
                },
                error: function (error) {
                    $('#translateButton').text('Translate').prop('disabled', false);
                    alert('Error translating the text. Please try again.');
                }
            });
        }

        function handleTranslatedTextInput() {
            var translatedTextValue = $('#TranslatedText').val().trim();
            if (translatedTextValue === '') {
                $('#saveTranslationButton').prop('disabled', true);
            } else {
                $('#saveTranslationButton').prop('disabled', false);
            }
        }

        function handleCloseActions() {
            $('#originalText').val('');
            $('#TranslatedText').val('');
            $('#translationType').val('');
            $('#saveTranslationButton').prop('disabled', true);
        }

        function handleSaveTranslation() {
            var formData1 = {
                OriginalText: $('#originalText').val(),
                TranslatedText: $('#TranslatedText').val(),
                TranslationTypeId: $('#translationType').val()
            };
            var formData = $('#addTranslationForm').serialize();

            $.ajax({
                url: "/Home/SaveTranslation",
                method: "POST",
                data: formData1,
                success: function (response) {
                    if (response.success) {
                        alert('Successfully saved!');
                        $('#translationsTable').DataTable().ajax.reload();
                        $('#addTranslationModal').modal('hide');
                        $('#originalText').val('');
                        $('#TranslatedText').val('');
                    } else {
                        var errorMessage = response.message;

                        if (response.errors) {
                            errorMessage += "\n";
                            $.each(response.errors, function (key, value) {
                                errorMessage += key + ": " + value.join(", ") + "\n";
                            });
                        }

                        alert(errorMessage);
                    }
                },
                error: function () {
                    alert('Error saving the translation. Please try again.');
                }
            });
        }

        function populateTranslationTypes() {
            $.get("/Home/GetAll", function (data) {
                var $dropdown = $("#translationType");
                $dropdown.empty();

                $.each(data, function (index, item) {
                    if (!item.isDeleted) {
                        $dropdown.append($("<option></option>").attr("value", item.translationTypeId).text(item.typeName));
                    }
                });

                selectedTranslationType = $("#translationType").val();
            });
        }
    </script>
}
