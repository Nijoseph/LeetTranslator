@{
    ViewData["Title"] = "Leet Translator";
}


<div class="modal fade" id="addTranslationModal" tabindex="-1" role="dialog" aria-labelledby="addTranslationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addTranslationModalLabel">Add a Translation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addTranslationForm">
                    <div class="form-group">
                        <label for="translationType">Translation Type</label>
                        <select class="dropdown-item" id="translationType"></select>
                        
                    </div>
                    <div class="form-group">
                        <label for="originalText">Original Text</label>
                        <textarea class="form-control" id="originalText" name="originalText" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="TranslatedText">Translated Text</label>
                        <textarea class="form-control" id="TranslatedText" rows="3" readonly></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="translateButton">Translate</button>
                <button type="button" class="btn btn-success" id="saveTranslationButton" disabled>Save</button>

                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- The Modal -->
<div class="modal" id="translationTypeModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Add Translation Type</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <form id="translationTypeForm">
                    <div class="form-group">
                        <label for="typeName">Type Name:</label>
                        <input type="text" class="form-control" id="typeName" name="typeName" required>
                    </div>
                    <div class="form-group">
                        <label for="apiKey">API Key:</label>
                        <input type="text" class="form-control" id="apiKey" name="apiKey">
                    </div>
                    <div class="form-group">
                        <label for="apiUrl">API URL:</label>
                        <input type="text" class="form-control" id="apiUrl" name="apiUrl">
                    </div>
                    <div class="form-group form-check">
                        <input type="checkbox" class="form-check-input" id="isDeleted" name="isDeleted">
                        <label class="form-check-label" for="isDeleted">Is Deleted</label>
                    </div>
                </form>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveTranslationTypeButton">Save</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

@if ( User.Identity.IsAuthenticated )
{
    <div id="translationDataSection">
        <table id="translationsTable" class="display" style="width:100%">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Type</th>
                    <th>Original Text</th>
                    <th>Translated Text</th>
                </tr>
            </thead>
        </table>
    </div>


}
else
{
    <div class="alert alert-success">
    <p>
        Leet Translator project for AFS .NET Developer Test. it hasData table  for records with search and filter options as it is required,
        it Use Ajax and JQuery and stored procedures to select ans save data in database
    </p>
    <p>Please <a asp-controller="Home" asp-action="Login">login</a> or <a asp-controller="Home" asp-action="Register">register</a> to access the Leet translator.</p>
</div>
}

@section Scripts {
    <script type="text/javascript">
        // Global variable to store the selected translation type
        var selectedTranslationType = 1;
        $(document).ready(function () {

            populateTranslationTypes();
            $('#translationsTable').DataTable({
                "ajax": {
                    "url": "@Url.Action("GetAllTranslationsForDataTable", "Home")",
                    "type": "GET",
                    "datatype": "json",
                    "dataSrc": "listOfTranslations"
                },
                "columns": [
                    {
                        "data": "date",
                        "name": "Date",
                        "title": "Date",
                        "render": function (data) {
                            var date = new Date(data);
                            var monthNames = [
                                "January", "February", "March", "April", "May", "June",
                                "July", "August", "September", "October", "November", "December"
                            ];
                            return date.getDate() + ' ' + monthNames[date.getMonth()] + ' ' + date.getFullYear();
                        }

                    },
                    { "data": "firstName", "name": "FirstName", "title": "First Name" },
                    { "data": "lastName", "name": "LastName", "title": "Last Name" },
                    { "data": "typeName", "name": "TypeName", "title": "Type" },
                    { "data": "originalText", "name": "OriginalText", "title": "Original Text" },
                    { "data": "translatedText", "name": "TranslatedText", "title": "Translated Text" }
                ]
            });

            // Add custom button to the header
            $("#translationsTable_wrapper .dataTables_filter").append('<button type="button" class="btn btn-primary" id="addTranslationButton">Add Translation</button>');

            $("#addTranslationButton").css({
                "margin": "10px",  // adjust this value as needed
                "padding": "5px 15px"  // adjust these values as needed
            });

            // Handle button click event
            $(document).on('click', '#customButton', function () {
                alert('Button clicked!');
            });

            $('#saveTranslationTypeButton').click(function () {
                var formData = {
                    TypeName: $('#typeName').val(),
                    ApiKey: $('#apiKey').val(),
                    ApiUrl: $('#apiUrl').val()
                };

                $.ajax({
                    url: "/Home/SaveTranslationType", // Your API endpoint
                    method: "POST",
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            alert('Successfully saved!');
                            populateTranslationTypes();
                            $('#typeName').val('');
                            $('#apiKey').val('');
                            $('#apiUrl').val('');
                            $('#translationTypeModal').modal('hide');
                        } else {
                            alert('Error saving data.');
                        }
                    }
                });
            });

            $('#addTranslationButton').click(function () {
                $('#addTranslationModal').modal('show');
            });

            $("#translationType").on('change', function () {
                selectedTranslationType = $(this).val();
                console.log("Selected Translation Type:", selectedTranslationType);
            });

            $('#translateButton').click(function () {
                handleTranslationRequest();
            });

            $('#TranslatedText').on('input', function () {
                handleTranslatedTextInput();
            });

            $('.close, #closeButton').click(function () {
                handleCloseActions();
            });

            $('#saveTranslationButton').click(function () {
                handleSaveTranslation();
            });

        });

        function handleTranslationRequest() {
            const originalText = $('#originalText').val();

            if (!originalText.trim()) {
                alert('Please enter some text to translate.');
                return;
            }

            $('#translateButton').text('Translating...').prop('disabled', true);
            $('#saveTranslationButton').prop('disabled', true);

            $.ajax({
                url: "@Url.Action("TranslateMethod", "Home")",
                method: "POST",
                data: { textToTranslate: originalText, typeId: selectedTranslationType },
                success: function (response) {
                    $('#translateButton').text('Translate').prop('disabled', false);

                    if (response.success) {
                        $('#TranslatedText').val(response.translatedText);
                        $('#saveTranslationButton').prop('disabled', false);
                    } else {
                        alert(response.message || 'Unexpected response from the server. Translation may have failed.');
                        $('#saveTranslationButton').prop('disabled', true);
                    }
                },
                error: function (error) {
                    $('#translateButton').text('Translate').prop('disabled', false);
                    alert('Error translating the text. Please try again.');
                }
            });
        }

        function handleTranslatedTextInput() {
            var translatedTextValue = $('#TranslatedText').val().trim();
            if (translatedTextValue === '') {
                $('#saveTranslationButton').prop('disabled', true);
            } else {
                $('#saveTranslationButton').prop('disabled', false);
            }
        }

        function handleCloseActions() {
            $('#originalText').val('');
            $('#TranslatedText').val('');
            $('#translationType').val('');  // If there's a default value for this dropdown, set it here
            $('#saveTranslationButton').prop('disabled', true);
        }

        // Handle saving the translation
        function handleSaveTranslation() {
            // Prepare the data
            var formData1 = {
                OriginalText: $('#originalText').val(),
                TranslatedText: $('#TranslatedText').val(),
                TranslationTypeId: $('#translationType').val()
            };
            var formData = $('#addTranslationForm').serialize();
            console.log("formData:", formData);
            console.log("formData1:", formData1);

            // 1. AJAX Request
            $.ajax({
                url: "/Home/SaveTranslation",
                method: "POST",
                data: formData1,
                success: function (response) {
                    // 2. Handle Server Response
                    if (response.success) {
                        alert('Successfully saved!');

                        // Refresh the translations table
                        $('#translationsTable').DataTable().ajax.reload();

                        // Close the modal and reset form values
                        $('#addTranslationModal').modal('hide');
                        $('#originalText').val('');
                        $('#TranslatedText').val('');
                    } else {
                        var errorMessage = response.message;

                        // If there are model validation errors, append them to the error message
                        if (response.errors) {
                            errorMessage += "\n";
                            $.each(response.errors, function (key, value) {
                                errorMessage += key + ": " + value.join(", ") + "\n";
                            });
                        }

                        alert(errorMessage);
                    }
                },
                error: function () {
                    // 3. Handle AJAX Errors
                    alert('Error saving the translation. Please try again.');
                }
            });
        }



        // Function to populate translation types in the dropdown
        function populateTranslationTypes() {
            $.get("/Home/GetAll", function (data) {
                var $dropdown = $("#translationType");
                $dropdown.empty();

                $.each(data, function (index, item) {
                    if (!item.isDeleted) {
                        $dropdown.append($("<option></option>").attr("value", item.translationTypeId).text(item.typeName));
                    }
                });

                // Initialize selectedTranslationType after populating dropdown
                selectedTranslationType = $("#translationType").val();
            });
        }


    </script>
}
